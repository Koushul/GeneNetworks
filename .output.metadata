{"timestamp": 1640237932.843767, "stored_source_code": "def shape_inputs(upstream, product):\n    traits = pd.read_parquet(str(upstream['generate_traits']))\n    mutation_matrix = pd.read_parquet(str(upstream['create_mutation_matrix']))\n    rnaseq = pd.read_parquet(str(upstream['filter_rnaseq']))\n\n    common_samples = set(rnaseq.columns) & set(mutation_matrix.index) & set(traits.index)\n    rnaseq = rnaseq[common_samples].astype(float)\n    mutation_matrix = mutation_matrix.loc[common_samples].astype(int)\n    traits = traits.loc[common_samples].astype(int)\n    rnaseq = rnaseq.subtract(rnaseq.mean(1), 0).div(rnaseq.std(1), 0)\n\n    Z = traits.to_numpy()\n    Y = rnaseq.T.to_numpy()\n    X = mutation_matrix.to_numpy()\n\n    r = Z.shape[1]\n    n = X.shape[0]\n    q = Y.shape[1]\n    p = X.shape[1]\n    assert X.shape[0]==Z.shape[0]\n    assert Y.shape[0]<=n\n\n    np.savetxt('traits.txt', Z, delimiter='\\t', fmt='%s')\n    np.savetxt('expression.txt', Y, delimiter='\\t', fmt='%s')\n    np.savetxt('genotype.txt', X, delimiter='\\t', fmt='%s')\n    traits.to_csv('traits_data.csv')\n    mutation_matrix.to_csv('mutations_data.csv')\n    rnaseq.to_csv('rnaseq_data.csv')\n", "params": {}}