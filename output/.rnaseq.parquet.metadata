{"timestamp": 1641683339.60305, "stored_source_code": "def filter_rnaseq(upstream, product):\n\n    rnaseq = pd.read_parquet(str(upstream['download_rawrnaseq']))\n    traits = pd.read_parquet(str(upstream['generate_traits']))\n    rnaseq.index = rnaseq['Hugo_Symbol']\n    rnaseq = rnaseq.drop(['Hugo_Symbol', 'Entrez_Gene_Id'], axis=1)\n    rnaseq.columns = rnaseq.columns.str[:-3]\n    rnaseq = rnaseq[rnaseq.index.notnull()].dropna().drop_duplicates()\n    rnaseq = rnaseq[~rnaseq.index.duplicated(keep='first')]\n    rnaseq = rnaseq.loc[:,~rnaseq.columns.duplicated()]\n    rnaseq.index.name = None\n\n    rnaseq = rnaseq[rnaseq.mean(1) > 100]\n    rnaseq = np.log2(rnaseq + 1)\n    rnaseq = rnaseq[~(rnaseq.var(1) < 0.1)]\n\n    def _compare(gene, df=rnaseq):\n        hpv_p = df.loc[gene][traits[traits.hpv == 1].index]\n        hpv_n = df.loc[gene][traits[traits.hpv == 0].index]\n        pvalue = ttest(hpv_p, hpv_n).pvalue\n\n        return pvalue\n\n    pvals = [_compare(gene) for gene in rnaseq.index]\n\n    top_diff_expr_genes = 5000\n    rnaseq = rnaseq.loc[pd.DataFrame(pvals, index=rnaseq.index).sort_values(by=0)[:top_diff_expr_genes].index]\n    rnaseq.to_parquet(str(product))\n", "params": {}}